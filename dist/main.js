(()=>{"use strict";const t=document.querySelector("body"),e=A("div","","modal"),i=A("div","","overlay");function n(n){n.preventDefault(),d(),t.appendChild(e),t.appendChild(i)}function a(n){n.preventDefault(),e.classList.remove("add"),e.classList.remove("edit"),e.replaceChildren(),t.removeChild(e),t.removeChild(i)}function d(){const t=e.appendChild($("","button","close"));t.appendChild(A("span","Close","visually-hidden")),t.addEventListener("click",(t=>{a(t)}))}function o(t,i,d){const o=$(e.classList.contains("edit")?"":"Save","submit",e.classList.contains("edit")?"save":"");return e.classList.contains("edit")?(i.insertAdjacentElement("afterend",o),o.appendChild(A("span","Save category","visually-hidden"))):i.appendChild(o),o.addEventListener("click",(o=>{if(e.classList.contains("edit")){const t=d,a=i.value;m.map((e=>{e.category===t&&(e.category=a)}));const c=L.indexOf(t);L.splice(c,1,a),e.replaceChildren(),n(o),e.classList.add("edit"),s(),T(h),T(u)}else t.editTodo(title.value,desc.value,dueDate.value,priority.value,category.value),a(o),T(u)})),o}function s(){e.appendChild(A("h2","Edit or delete categories"));const t=e.appendChild(document.createElement("ul"));L.map((i=>{const a=t.appendChild(document.createElement("li")),d=a.appendChild(A("h3",`${i}`));d.setAttribute("tabindex","0"),d.setAttribute("type","button"),d.addEventListener("click",(t=>{a.replaceChildren(),a.classList.add("edit-category-modal"),function(t,e,i){const n=e.textContent;t.target.remove();const a=A("label",n,"visually-hidden");a.setAttribute("for",n);const d=document.createElement("input");d.type="text",d.setAttribute("id",n),d.value=n,i.appendChild(a),i.appendChild(d)}(t,d,a);const c=document.querySelector(`#${i}`);!function(t){const i=$("","button","");i.appendChild(A("span","Undo edit category","visually-hidden")),t.insertAdjacentElement("afterend",i),i.addEventListener("click",(t=>{e.replaceChildren(),n(t),e.classList.add("edit"),s()}))}(o(L,c,i))})),C(a,i)}));const i=A("p","Deleting a category deletes all the todos associated with the category!");t.insertAdjacentElement("afterend",i)}const c=document.querySelector(".new-todo"),l=document.querySelector(".new-category"),r=document.querySelector(".todo-container"),u=document.querySelector(".todo-container ul"),p=document.querySelector(".edit-category"),h=document.querySelector(".categories");function y(){document.querySelectorAll(".categories button").forEach((t=>t.classList.remove("active")))}function v(){const t=h.appendChild($("All projects","button","active"));t.addEventListener("click",(()=>{r.classList.remove("filtered"),y(),t.classList.add("active"),T(u)})),L.map((t=>{h.appendChild($(`${t}`,"button","")).addEventListener("click",(t=>{g=m.filter((e=>e.category===t.target.textContent)),y(),r.classList.add("filtered"),t.target.classList.add("active"),T(u)}))}))}function f(t){const i=document.createElement("li");u.appendChild(i);const a=document.createElement("input");a.setAttribute("type","checkbox"),i.appendChild(a),a.checked=t.status,a.checked&&i.setAttribute("class","checked"),a.addEventListener("change",(()=>{!function(t,e=(r.classList.contains("filtered")?g:m)){t.toggleStatus(),e.splice(e.indexOf(t),1),t.status?e.push(t):e.unshift(t)}(t),T(u)}));const o=i.appendChild(A("span",`${t.priority}`,"priority-tag"));o.setAttribute("aria-label","priority"),o.classList.add(t.priority.toLowerCase());const s=i.appendChild(A("h2",`${t.title}`));s.setAttribute("tabindex","0"),s.setAttribute("type","button"),s.setAttribute("aria-label",`See and edit ${t.title}`),i.appendChild(A("span",`${t.dueDate.toLocaleString().split(",")[0]}`)),C(i,t),s.addEventListener("click",(i=>{n(i),function(t){var i;e.appendChild(A("h2",`${t.title}`)),e.appendChild(A("p",`${t.desc}`)),e.appendChild(A("p",`Due Date: ${t.dueDate.toLocaleString().split(",")[0]}`)),e.appendChild(A("p",`Priority: ${t.priority}`)),e.appendChild(A("p",`Category: ${t.category}`)),i=t,e.appendChild($("Edit Todo","button","")).addEventListener("click",(()=>{e.replaceChildren(),d(),S(i),function(t){title.value=t.title,desc.value=t.desc,priority.value=t.priority,category.value=t.category,dueDate.valueAsDate=t.dueDate}(i)}))}(t)}))}function C(t,i){const n=t.appendChild($("","button",""));n.appendChild(A("span",`Delete ${i.title||i}`,"visually-hidden")),n.addEventListener("click",(function(){!function(t,i,n){if(t.remove(),n.splice(n.indexOf(i),1),e.classList.contains("edit")){const t=m.filter((t=>t.category===i));for(let e=0;e<t.length;e++)m=m.filter((i=>i!==t[e]));T(u),T(h)}}(t,i,e.classList.contains("edit")?L:m)}))}c.addEventListener("click",(t=>{e.classList.add("add"),n(t),S()})),l.addEventListener("click",(t=>{n(t),function(){e.appendChild(A("h2","Add a New Category"));const t=e.appendChild(document.createElement("form"));w("New Category","new-category","visually-hidden","input","text",t),function(t){t.appendChild($("Add Category","submit","")).addEventListener("click",(t=>{var e;t.preventDefault(),e=document.querySelector("#new-category").value,L.push(e),a(t),T(h)}))}(t)}()})),p.addEventListener("click",(t=>{n(t),e.classList.add("edit"),s()}));let m=[],g=[],L=["Personal","Work"];const b=["None","Low","Medium","High"];class E{constructor(t,e,i,n,a){this.title=t,this.desc=e,this.dueDate=i?new Date(i):"No Due Date",this.priority=n,this.category=a,this.status=!1}toggleStatus(){return this.status=!this.status,this.status}editTodo(t,e,i,n,a){this.title=t,this.desc=e,this.dueDate=i?new Date(i):"No Due Date",this.priority=n,this.category=a}}function D(t,e,i,n,a){const d=new E(t,e,i,n,a);return m.push(d),d}const k=new Date;function A(t,e,i){const n=document.createElement(t);return n.textContent=e,n.classList.add(i),n}function w(t,e,i,n,a,d){const o=d.appendChild(A("label",t));o.setAttribute("for",e),o.setAttribute("class",i);const s=document.createElement(n);s.setAttribute("type",a),s.id=e,d.appendChild(s)}function S(t){e.appendChild(A("h2",e.classList.contains("add")?"Add a New Todo":"Edit Todo"));const i=e.appendChild(A("form"));w("Todo Title","title","","input","text",i),w("Description","desc","","textarea","",i),w("Due Date","dueDate","","input","date",i),w("Priority","priority","","select","",i),w("Category","category","","select","",i),x(b,"#priority"),x(L,"#category"),e.classList.contains("add")?function(t){t.appendChild($("Add Todo","submit","")).addEventListener("click",(t=>{t.preventDefault(),D(title.value,desc.value,dueDate.value,priority.value,category.value),T(u),a(t)}))}(i):o(t,i)}function x(t,e){t.map((t=>{const i=document.createElement("option"),n=document.querySelector(e);i.textContent=`${t}`,i.value=`${t}`,n.appendChild(i)}))}function $(t,e,i){const n=document.createElement("button");return n.textContent=t,n.setAttribute("type",e),n.setAttribute("class",i),n}function q(t=(r.classList.contains("filtered")?g:m)){!function(t){t.sort(((t,e)=>t.dueDate===e.dueDate&&!0!==t.status&&!0!==e.status?0:t.dueDate>e.dueDate&&!0!==t.status&&!0!==e.status?1:-1))}(t),t.map((t=>f(t)))}function T(t){t.replaceChildren(),t===h?v():q()}D("Click on todo title to see it and edit it","This is the description of the todo. Try to edit this todo clicking the 'Edit todo' button",k,"High","Personal"),D("Click on the X button to delete it","If you delete a todo it is gone forever!",k,"High","Personal"),D("How to navigate the interface","On the top of the page you have buttons to add a new todo, add a new category and edit categories. With the buttons in the next row you can filter your todos from different categories.",k,"High","Personal"),D("Click on the checkbox to mark a todo done","Congratulations, you finished this tutorial!",k,"High","Personal"),q(),v()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,